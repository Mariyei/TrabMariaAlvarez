from scapy.all import rdpcap, Dot11

# Lista de prefijos MAC conocidos de algunos ESP32
prefijos_esp32 = [ 
	"00:4b:12",
	"00:70:07",	
	"04:83:08", 	
	"08:3a:8d",
	"08:3a:f2", 	
	"08:92:72", 	
	"08:a6:f7",
	"08:b6:1f", 	
	"08:d1:f9", 	
	"08:f9:e0", 	
	"0c:4e:a0", 	
	"0c:8b:95", 	
	"0c:b8:15", 	
	"0c:dc:7e", 	
	"10:00:3b", 	
	"10:06:1c", 	
	"10:20:ba", 	
	"10:51:db", 	
	"10:52:1c", 	
	"10:91:a8",	
	"10:97:bd", 	
	"10:b4:1d", 	
	"14:08:08", 	
	"14:2b:2f", 	
	"14:33:5c", 	
	"18:8b:0e", 	
	"18:fe:34", 	
	"1c:69:20", 	
	"1c:9d:c2", 	
	"1c:db:d4", 	
	"20:43:a8", 	
	"20:6e:f1", 	
	"20:e7:c8", 	
	"24:0a:c4", 	
	"24:4c:ab", 	
	"24:58:7c",	
	"24:62:ab", 	
	"24:6f:28", 	
	"24:a1:60", 	
	"24:b2:de", 	
	"24:d7:eb", 	
	"24:dc:c3", 	
	"24:ec:4a", 	
	"28:05:a5", 	
	"28:37:2f", 	
	"28:56:2f", 	
	"2c:3a:e8", 	
	"2c:bc:bb", 	
	"2c:f4:32", 
	"30:30:f9", 	
	"30:83:98", 	
	"30:ae:a4", 	
	"30:c6:f7", 	
	"30:c9:22", 	
	"30:ed:a0", 	
	"34:5f:45", 	
	"34:85:18",	
	"34:86:5d", 	
	"34:94:54", 	
	"34:98:7a", 	
	"34:ab:95", 	
	"34:b4:72",	
	"34:b7:da", 	
	"34:cd:b0", 
	"38:18:2b",	
	"3c:61:05", 	
	"3c:71:bf", 	
	"3c:84:27", 	
	"3c:8a:1f", 	
	"3c:dc:75", 	
	"3c:e9:0e", 	
	"40:22:d8",	
	"40:4c:ca", 	
	"40:91:51", 	
	"40:f5:20", 	
	"44:17:93", 	
	"44:1d:64", 	
	"48:27:e2", 
	"48:31:b7",
	"48:3f:da", 
	"48:55:19", 	
	"48:ca:43", 	
	"48:e7:29", 	
	"48:f6:ee", 
	"4c:11:ae", 
	"4c:75:25", 	
	"4c:c3:82",
	"4c:eb:d6", 	
	"50:02:91", 
	"50:78:7d", 
	"54:32:04", 
	"54:43:b2",
	"54:5a:a6", 
	"58:8c:81", 
	"58:bf:25", 
	"58:cf:79", 
	"58:e6:c5", 
	"5c:01:3b", 
	"5c:cf:7f", 
	"60:01:94", 
	"60:55:f9", 
	"64:b7:08", 
	"64:e8:33", 
	"68:25:dd",
	"68:67:25", 
	"68:b6:b3",
	"68:c6:3a",
	"68:fe:71", 
	"6c:b4:56", 
	"6c:c8:40", 
	"70:03:9f", 
	"70:04:1d", 
	"70:b8:f6", 
	"74:4d:bd",
	"78:1c:3c", 
	"78:21:84", 
	"78:42:1c",
	"78:e3:6d",
	"78:ee:4c",
	"7c:2c:67",
	"7c:73:98", 
	"7c:87:ce",
	"7c:9e:bd",
	"7c:df:a1",
	"80:64:6f", 
	"80:65:99", 
	"80:7d:3a",
	"80:b5:4e", 
	"80:f1:b2", 
	"80:f3:da",
	"84:0d:8e", 
	"84:1f:e8", 
	"84:cc:a8",
	"84:f3:eb", 
	"84:f7:03", 
	"84:fc:e6",
	"88:13:bf", 	
	"88:56:a6", 	
	"88:57:21", 	
	"8c:4b:14", 	
	"8c:4f:00", 	
	"8c:aa:b5", 	
	"8c:bf:ea", 	
	"8c:ce:4e", 	
	"90:15:06", 	
	"90:38:0c", 	
	"90:70:69", 	
	"90:97:d5", 	
	"90:e5:b1", 	
	"94:3c:c6", 	
	"94:51:dc", 	
	"94:54:c5", 	
	"94:a9:90", 
	"94:b5:55", 	
	"94:b9:7e", 	
	"94:e6:86", 
	"98:3d:ae", 
	"98:88:e0", 	
	"98:a3:16", 	
	"98:cd:ac",
	"98:f4:ab", 
	"9c:13:9e", 
	"9c:9c:1f", 
	"9c:9e:6e", 
	"a0:20:a6", 
	"a0:76:4e", 
	"a0:85:e3", 
	"a0:a3:b3",
	"a0:b7:65", 
	"a0:dd:6c",
	"a4:7b:9d", 
	"a4:cf:12", 
	"a4:e5:7c", 
	"a4:f0:0f", 
	"a8:03:2a", 
	"a8:42:e3", 
	"a8:46:74", 
	"a8:48:fa",
	"ac:0b:fb",
	"ac:15:18", 
	"ac:67:b2",
	"ac:d0:74",
	"b0:81:84", 
	"b0:a7:32",
	"b0:b2:1c",
	"b4:3a:45", 
	"b4:8a:0a", 
	"b4:e6:2d", 
	"b8:d6:1a", 
	"b8:f0:09", 
	"b8:f8:62", 
	"bc:dd:c2", 
	"bc:ff:4d", 
	"c0:49:ef", 
	"c0:4e:30", 
	"c0:5d:89", 
	"c0:cd:d6", 
	"c4:4f:33", 
	"c4:5b:be", 
	"c4:d8:d5",
	"c4:dd:57", 
	"c4:de:e2", 
	"c8:2b:96", 
	"c8:2e:18", 
	"c8:c9:a3", 
	"c8:f0:9e", 
	"cc:50:e3", 
	"cc:7b:5c", 
	"cc:8d:a2", 
	"cc:ba:97", 	
	"cc:db:a7",
	"d0:cf:13", 
	"d0:ef:76", 
	"d4:8a:fc", 	
	"d4:8c:49", 
	"d4:d4:da", 
	"d4:e9:f4", 	
	"d4:f9:8d", 	
	"d8:13:2a", 	
	"d8:3b:da", 	
	"d8:85:ac", 	
	"d8:a0:1d", 	
	"d8:bc:38", 	
	"d8:bf:c0",
	"d8:f1:5b", 	
	"dc:06:75", 	
	"dc:1e:d5",
	"dc:4f:22", 
	"dc:54:75",	
	"dc:b4:d9", 	
	"dc:da:0c", 	
	"e0:5a:1b", 	
	"e0:8c:fe", 	
	"e0:98:06", 	
	"e0:e2:e6", 	
	"e4:65:b8", 	
	"e4:b0:63", 	
	"e4:b3:23", 	
	"e8:06:90", 	
	"e8:31:cd", 	
	"e8:68:e7", 
	"e8:6b:ea", 	
	"e8:9f:6d", 	
	"e8:db:84", 	
	"e8:f6:0a", 	
	"ec:62:60", 	
	"ec:64:c9", 	
	"ec:94:cb", 	
	"ec:c9:ff", 	
	"ec:da:3b", 	
	"ec:e3:34", 	
	"ec:fa:bc", 	
	"f0:08:d1", 	
	"f0:24:f9", 	
	"f0:9e:9e", 	
	"f0:f5:bd", 	
	"f4:12:fa", 	
	"f4:65:0b", 	
	"f4:cf:a2", 	
	"f8:b3:b7", 	
	"fc:01:2c", 	
	"fc:b4:67",	
	"fc:e8:c0", 
	"fc:f5:c4",
    # Se agregan las 264 direcciones MAC conocidas de los ESP32
]

packets = rdpcap("/home/marifer/Downloads/BusquedasdeDireccionesMAC.pcapng")

# Se crea una función para extraer el prefijo de las dirección MAC encontradas
def obtener_prefijo(mac):
    if mac:  # Se verifica si la dirección MAC no es None
        return ':'.join(mac.split(':')[:3])
    return None

# Se crea un conjunto para almacenar las direcciones MAC ya vistas
macs_vistas = set()

# Se extraen y muestran las direcciones MAC que coinciden con los prefijos conocidos
for pkt in packets:
    if pkt.haslayer(Dot11):
        addr1 = pkt.addr1  # Dirección MAC de destino
        addr2 = pkt.addr2  # Dirección MAC de origen
        addr3 = pkt.addr3  # Dirección MAC del BSSID (punto de acceso)

        # Se obtienen los prefijos de las direcciones MAC del archivo
        prefijo_addr1 = obtener_prefijo(addr1)
        prefijo_addr2 = obtener_prefijo(addr2)
        prefijo_addr3 = obtener_prefijo(addr3)

        # Se verifica si alguno de los prefijos coincide con los prefijos conocidos y si ya fue localizado
        if prefijo_addr1 in prefijos_esp32 and addr1 not in macs_vistas:
            print(f"Dirección MAC coincidente en Addr1: {addr1}")
            macs_vistas.add(addr1)

        if prefijo_addr2 in prefijos_esp32 and addr2 and addr2 not in macs_vistas:
            print(f"Dirección MAC coincidente en Addr2: {addr2}")
            macs_vistas.add(addr2) 

        if prefijo_addr3 in prefijos_esp32 and addr3 not in macs_vistas:
            print(f"Dirección MAC coincidente en Addr3: {addr3}")
            macs_vistas.add(addr3)

